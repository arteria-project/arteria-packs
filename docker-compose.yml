# This file has been modified from the https://github.com/StackStorm/st2-docker repo
# It is therefore subject to Apache Licence 2.0.
# It has been modified to work with the specific Arteria services and workflow.

version: '3'



services:

### Stackstorm

  st2makesecrets:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2actionrunner:${ST2_VERSION:-latest}
    restart: on-failure
    networks:
      - private
    volumes:
      - ./scripts/makesecrets.sh:/makesecrets.sh
      - stackstorm-keys:/etc/st2/keys:rw
    command: /makesecrets.sh
    dns_search: .
  st2api:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2api:${ST2_VERSION:-latest}
    restart: on-failure
    depends_on:
      - mongo
      - rabbitmq
      - redis
      - st2makesecrets
    networks:
      - private
    environment:
      ST2_AUTH_URL: ${ST2_AUTH_URL:-http://st2auth:9100/}
      ST2_API_URL: ${ST2_API_URL:-http://st2api:9101/}
      ST2_STREAM_URL: ${ST2_STREAM_URL:-http://st2stream:9102/}
    volumes:
      - ./files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./files/st2.user.conf:/etc/st2/st2.user.conf:ro
      - stackstorm-keys:/etc/st2/keys:ro
      - stackstorm-packs-configs:/opt/stackstorm/configs:rw
      - stackstorm-packs:/opt/stackstorm/packs:rw
      - ./files/rbac:/opt/stackstorm/rbac:rw
      - ${ST2_PACKS_DEV:-./packs.dev}:/opt/stackstorm/packs.dev:rw
    dns_search: .
  st2stream:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2stream:${ST2_VERSION:-latest}
    restart: on-failure
    depends_on:
      - st2api
    networks:
      - private
    volumes:
      - ./files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./files/st2.user.conf:/etc/st2/st2.user.conf:ro
    dns_search: .
  st2scheduler:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2scheduler:${ST2_VERSION:-latest}
    restart: on-failure
    depends_on:
      - redis
      - st2api
    networks:
      - private
    volumes:
      - ./files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./files/st2.user.conf:/etc/st2/st2.user.conf:ro
    dns_search: .
  st2workflowengine:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2workflowengine:${ST2_VERSION:-latest}
    restart: on-failure
    depends_on:
      - redis
      - st2api
    networks:
      - private
    volumes:
      - ./files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./files/st2.user.conf:/etc/st2/st2.user.conf:ro
      - stackstorm-keys:/etc/st2/keys:ro
    dns_search: .
  st2auth:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2auth:${ST2_VERSION:-latest}
    restart: on-failure
    depends_on:
      - st2api
    networks:
      - private
    volumes:
      - ./files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./files/st2.user.conf:/etc/st2/st2.user.conf:ro
      - ./files/htpasswd:/etc/st2/htpasswd:ro
    dns_search: .
  st2actionrunner:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2actionrunner:${ST2_VERSION:-latest}
    restart: on-failure
    depends_on:
      - redis
      - st2api
    networks:
      - private
    volumes:
      - ./:/opt/stackstorm/packs/arteria
      - ./files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./files/st2.user.conf:/etc/st2/st2.user.conf:ro
      - stackstorm-packs-configs:/opt/stackstorm/configs:rw
      - stackstorm-packs:/opt/stackstorm/packs:rw
      - ${ST2_PACKS_DEV:-./packs.dev}:/opt/stackstorm/packs.dev:rw
      - stackstorm-virtualenvs:/opt/stackstorm/virtualenvs:rw
      - stackstorm-ssh:/home/stanley/.ssh
      # Action runner needs access to keys since action definitions (Jinja
      # templates) can reference secrets
      - stackstorm-keys:/etc/st2/keys:ro
    dns_search: .
  st2garbagecollector:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2garbagecollector:${ST2_VERSION:-latest}
    restart: on-failure
    depends_on:
      - st2api
    networks:
      - private
    volumes:
      - ./files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./files/st2.user.conf:/etc/st2/st2.user.conf:ro
    dns_search: .
  st2notifier:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2notifier:${ST2_VERSION:-latest}
    restart: on-failure
    depends_on:
      - redis
      - st2api
    networks:
      - private
    volumes:
      - ./files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./files/st2.user.conf:/etc/st2/st2.user.conf:ro
    dns_search: .
  st2rulesengine:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2rulesengine:${ST2_VERSION:-latest}
    restart: on-failure
    depends_on:
      - st2api
    networks:
      - private
    volumes:
      - ./files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./files/st2.user.conf:/etc/st2/st2.user.conf:ro
    dns_search: .
  st2sensorcontainer:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2sensorcontainer:${ST2_VERSION:-latest}
    restart: on-failure
    depends_on:
      - st2api
    networks:
      - private
    volumes:
      - ./files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./files/st2.user.conf:/etc/st2/st2.user.conf:ro
      - stackstorm-virtualenvs:/opt/stackstorm/virtualenvs:ro
      - stackstorm-packs:/opt/stackstorm/packs:ro
      - stackstorm-packs-configs:/opt/stackstorm/configs:ro
      - ${ST2_PACKS_DEV:-./packs.dev}:/opt/stackstorm/packs.dev:ro
    dns_search: .
  st2timersengine:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2timersengine:${ST2_VERSION:-latest}
    restart: on-failure
    depends_on:
      - st2api
    networks:
      - private
    volumes:
      - ./files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
    dns_search: .
  st2client:
    image: ${ST2_IMAGE_REPO:-stackstorm/}st2actionrunner:${ST2_VERSION:-latest}
    restart: on-failure
    depends_on:
      - st2auth
      - st2api
      - st2stream
    command: /st2client-startup.sh
    networks:
      - private
    environment:
      ST2CLIENT: 1
      ST2_AUTH_URL: ${ST2_AUTH_URL:-http://st2auth:9100/}
      ST2_API_URL: ${ST2_API_URL:-http://st2api:9101/}
      ST2_STREAM_URL: ${ST2_STREAM_URL:-http://st2stream:9102/}
      TZ: ${TZ:-UTC}
    volumes:
      - ./:/opt/stackstorm/packs/arteria
      - ./files/st2.docker.conf:/etc/st2/st2.docker.conf:ro
      - ./files/st2.user.conf:/etc/st2/st2.user.conf:ro
      # Technically, client container doesn't need or should have access to the
      # keys in prod setup, but here we make it available to end user for
      # testing and transparency reasons since this setup is primarily mean to
      # be used for testing and development.
      - stackstorm-keys:/etc/st2/keys:ro
      - stackstorm-packs-configs:/opt/stackstorm/configs:rw
      - stackstorm-packs:/opt/stackstorm/packs:rw
      - ./files/rbac:/opt/stackstorm/rbac:rw
      - ${ST2_PACKS_DEV:-./packs.dev}:/opt/stackstorm/packs.dev:rw
      - ./files/st2-cli.conf:/root/.st2/config
      - ./scripts/st2client-startup.sh:/st2client-startup.sh


# external stackstom services
  mongo:
    image: mongo:4.4
    restart: on-failure
    # environment:
    #   MONGO_INITDB_NAME: st2
    #   MONGO_INITDB_ROOT_USERNAME: mongoA
    #   MONGO_INITDB_ROOT_PASSWORD: mongoAsecret
    #   MONGO_INITDB_USERNAME: mongoU
    #   MONGO_INITDB_PASSWORD: mongoUsecret
    networks:
      - private
    volumes:
      - stackstorm-mongodb:/data/db
    dns_search: .
  rabbitmq:
    image: rabbitmq:3.8
    restart: on-failure
    networks:
      - private
    volumes:
      - stackstorm-rabbitmq:/var/lib/rabbitmq
    dns_search: .
  redis:
    image: redis:6.2
    restart: on-failure
    networks:
      - private
    volumes:
      - stackstorm-redis:/data
    dns_search: .

### Arteria Services
  runfolder-service:
    build: docker-images/runfolder-service
    container_name: runfolder-service
    ports:
      - "8080:80"
    networks:
      - private
    volumes:
      - monitored-dir-volume:/opt/monitored-folder
    dns_search: .

  bcl2fastq-service:
    build: docker-images/bcl2fastq-service
    container_name: bcl2fastq-service
    ports:
      - "8081:80"
    networks:
      - private
    volumes:
      - monitored-dir-volume:/opt/monitored-folder
      - ./docker-mountpoints/bcl2fastq-output:/bcl2fastq-output
    dns_search: .

  checkqc-service:
    build: docker-images/checkqc-service
    container_name: checkqc-service
    ports:
      - "8082:80"
    networks:
      - private
    volumes:
      - monitored-dir-volume:/opt/monitored-folder
      - ./docker-mountpoints/bcl2fastq-output:/bcl2fastq-output
    dns_search: .

volumes:
  stackstorm-mongodb:
  stackstorm-rabbitmq:
  stackstorm-redis:
  stackstorm-packs:
  stackstorm-packs-configs:
  stackstorm-keys:
  stackstorm-virtualenvs:
  stackstorm-ssh:
  monitored-dir-volume:
     driver_opts:
       type: none
       device: $ARTERIA_MONITORED_FOLDER
       o: bind

networks:
  private:
    driver: bridge
