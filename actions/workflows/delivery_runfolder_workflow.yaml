version: "2.0" # mistral version
name: arteria.delivery_runfolder_workflow
description: Deliver data from a runfolder to a SNIC delivery project

workflows:
    main:
        type: direct
        input:
          - runfolder_name
          - projects_pi_email_file
          - skip_mover
          - sleep_time
          - restrict_to_projects
          - force_delivery
        task-defaults:
          on-error:
            - post_failed_message_to_slack

        tasks:
            note_workflow_version:
              action: core.local
              input:
                cmd: git rev-parse HEAD
                cwd: /opt/stackstorm/packs/arteria/
              on-success:
                  - get_config

            get_config:
              action: arteria.get_pack_config
              publish:
                supr_api_user: <% task(get_config).result.result.supr_api_user %>
                supr_api_key: <% task(get_config).result.result.supr_api_key %>
                supr_api_url: <% task(get_config).result.result.supr_api_url %>
                irma_api_key: <% task(get_config).result.result.irma_api_key %>
                delivery_service_url: <% task(get_config).result.result.delivery_service_url %>
                delivery_workflow_status_slack_channel: <% task(get_config).result.result.delivery_workflow_status_slack_channel %>
              on-success:
                 - post_start_message_to_slack

            post_start_message_to_slack:
              action: arteria.post_to_slack
              input:
                user: 'Bot D Liver'
                emoji_icon: ':robot_face:'
                channel: <% $.delivery_workflow_status_slack_channel %>
                message: 'I just started a delivery for `<% $.runfolder_name %>`. You can track my progress by running: `st2 execution get <% env().st2_execution_id %>`'
              on-success:
                 - projects_on_runfolder

            projects_on_runfolder:
              action: core.http
              input:
                url: "<% $.delivery_service_url %>/api/1.0/runfolders/<% $.runfolder_name %>/projects"
                method: "GET"
                headers:
                  apikey: "<% $.irma_api_key %>"
              publish:
                projects_on_runfolder: <% task(projects_on_runfolder).result.body.projects.name %>
              on-success:
                - get_pi_emails

            get_pi_emails:
              action: arteria.read_projects_email_file
              input:
                file_path: <% $.projects_pi_email_file %>
                projects:
                  projects: <% $.projects_on_runfolder %>
                restrict_to_projects: <% $.restrict_to_projects %>
              publish:
                projects_to_emails_sensitive: <% task(get_pi_emails).result.result %>
              on-success:
                - get_pi_ids

            get_pi_ids:
              action: arteria.get_pi_id_for_email_from_supr
              input:
                project_to_email_sensitive_dict: <% $.projects_to_emails_sensitive %>
                api_user: <% $.supr_api_user %>
                api_key: <% $.supr_api_key %>
                supr_base_api_url: <% $.supr_api_url %>
              publish:
                pi_supr_ids: <% task(get_pi_ids).result.result %>
              on-success:
                - stage_runfolder

            stage_runfolder:
              action: arteria.delivery_service_stage_runfolder
              input:
                 delivery_base_api_url: <% $.delivery_service_url %>
                 runfolder_name: <% $.runfolder_name %>
                 projects:
                   projects: <% $.projects_on_runfolder %>
                 sleep_time: <% $.sleep_time %>
                 irma_api_key: <% $.irma_api_key %>
                 restrict_to_projects: <% $.restrict_to_projects %>
                 force_delivery: <% $.force_delivery %>
              publish:
                 projects_and_stage_ids: <% task(stage_runfolder).result.result %>
              on-success:
                - create_delivery_projects

            create_delivery_projects:
              action: arteria.create_delivery_project_in_super
              input:
                project_names_and_ids: <% $.pi_supr_ids %>
                staging_info: <% $.projects_and_stage_ids %>
                project_info: <% $.projects_to_emails_sensitive %>
                supr_base_api_url: <% $.supr_api_url %>
                api_user: <% $.supr_api_user %>
                api_key: <% $.supr_api_key %>
              publish:
                delivery_projects: <% task(create_delivery_projects).result.result %>
              on-success:
                - deliver_runfolder

            # TODO Remember to pass correct md5sum files for the project.
            deliver_runfolder:
              action: arteria.delivery_service_deliver
              with-items: ngi_project_name in <% $.projects_and_stage_ids.keys() %>
              input:
                ngi_project_name: <% $.ngi_project_name %>
                staging_id: <% $.projects_and_stage_ids.get($.ngi_project_name).staging_id %>
                delivery_base_api_url: <% $.delivery_service_url %>
                delivery_project_id: <% $.delivery_projects.get($.ngi_project_name).name %>
                skip_mover: <% $.skip_mover %>
                irma_api_key: <% $.irma_api_key %>
              publish:
                delivery_projects_and_ids: <% task(deliver_runfolder).result.result %>
              on-success:
                - check_delivery_status

            check_delivery_status:
              action: arteria.delivery_service_delivery_status
              with-items:
                - id in <% $.delivery_projects_and_ids.delivery_id %>
                - ngi_project_name in <% $.delivery_projects_and_ids.project_name %>
              input:
                ngi_project_name: <% $.ngi_project_name %>
                delivery_base_api_url: <% $.delivery_service_url %>
                delivery_id: <% $.id %>
                skip_mover: <% $.skip_mover %>
                sleep_time: <% $.sleep_time %>
                irma_api_key: <% $.irma_api_key %>
              on-success:
                - check_ngi_ready_status: <% $.skip_mover = false %>
                - post_finish_message_to_slack: <% $.skip_mover = true %>

            check_ngi_ready_status:
              action: arteria.check_ngi_ready_in_supr
              with-items:
                - project in <% $.delivery_projects.keys() %>
              input:
                project: <% $.delivery_projects.get($.project) %>
                supr_base_api_url: <% $.supr_api_url %>
                api_user: <% $.supr_api_user %>
                api_key: <% $.supr_api_key %>
              on-success:
                - post_finish_message_to_slack

            post_finish_message_to_slack:
              action: arteria.post_to_slack
              input:
                user: 'Bot D Liver'
                emoji_icon: ':robot_face:'
                channel: <% $.delivery_workflow_status_slack_channel %>
                message: 'I just finished a delivery for `<% $.runfolder_name %>`. You can see the details by running: `st2 execution get <% env().st2_execution_id %>`'

            post_failed_message_to_slack:
              action: arteria.post_to_slack
              input:
                user: 'Bot D Liver'
                emoji_icon: ':robot_face:'
                channel: <% $.delivery_workflow_status_slack_channel %>
                message: 'Sorry, but I just failed to deliver `<% $.runfolder_name %>`. You can see the details by running: `st2 execution get <% env().st2_execution_id %>`'
              on-complete:
                - fail
